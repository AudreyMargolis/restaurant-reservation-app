[{"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/index.js":"1","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/App.js":"2","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Layout.js":"3","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Menu.js":"4","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Routes.js":"5","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/NotFound.js":"6","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/dashboard/Dashboard.js":"7","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/date-time.js":"8","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/api.js":"9","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/ErrorAlert.js":"10","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-date.js":"11","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/NewReservation.js":"12","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/Reservation.js":"13","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/reservationFormValidation.js":"14","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/NewTable.js":"15","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/Table.js":"16","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/seating/Seating.js":"17","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/Tables.js":"18","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-time.js":"19","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/useQuery.js":"20"},{"size":286,"mtime":1626705947136,"results":"21","hashOfConfig":"22"},{"size":333,"mtime":1626705947136,"results":"23","hashOfConfig":"22"},{"size":550,"mtime":1626705947136,"results":"24","hashOfConfig":"22"},{"size":1817,"mtime":1626705947136,"results":"25","hashOfConfig":"22"},{"size":2586,"mtime":1628302525579,"results":"26","hashOfConfig":"22"},{"size":327,"mtime":1626705947136,"results":"27","hashOfConfig":"22"},{"size":1300,"mtime":1628301969331,"results":"28","hashOfConfig":"22"},{"size":2386,"mtime":1626705947136,"results":"29","hashOfConfig":"22"},{"size":3282,"mtime":1628280246062,"results":"30","hashOfConfig":"22"},{"size":486,"mtime":1626705947136,"results":"31","hashOfConfig":"22"},{"size":627,"mtime":1628280078749,"results":"32","hashOfConfig":"22"},{"size":4192,"mtime":1628283715391,"results":"33","hashOfConfig":"22"},{"size":512,"mtime":1628218126254,"results":"34","hashOfConfig":"22"},{"size":1419,"mtime":1626830173934,"results":"35","hashOfConfig":"22"},{"size":2165,"mtime":1628133737768,"results":"36","hashOfConfig":"22"},{"size":519,"mtime":1628302566000,"results":"37","hashOfConfig":"22"},{"size":943,"mtime":1628280310242,"results":"38","hashOfConfig":"22"},{"size":789,"mtime":1628302032157,"results":"39","hashOfConfig":"22"},{"size":622,"mtime":1628280102361,"results":"40","hashOfConfig":"22"},{"size":361,"mtime":1626705947136,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"dvjm2u",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/index.js",[],["86","87"],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/App.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Layout.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Menu.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Routes.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/NotFound.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/dashboard/Dashboard.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/date-time.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/api.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/ErrorAlert.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-date.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/NewReservation.js",["88","89","90","91","92","93","94"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router\"\nimport axios from \"axios\";\nimport { next } from \"../utils/date-time\";\nimport { formatNumber, validateReservation } from \"../utils/reservationFormValidation\"\nimport ErrorAlert  from \"../layout/ErrorAlert\";\nimport { postReservation } from \"../utils/api\";\n\n\n\nexport default function NewReservation ({date}) {\n    const didMount = useRef(false);\n\n    const history = useHistory();\n    const today = new Date();\n    let time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n\n   const initialFormState = {\n       first_name: \"first name\",\n       last_name: \"last name\",\n       mobile_number: \"555-555-5555\",\n       reservation_date: date,\n       reservation_time: \"10:30\",\n       people: 1\n   }\n   const [formData, setFormData] = useState({});\n   const [reservationsError, setReservationsError] = useState(null);\n\n\n\n   const handleChange = ({ target }) => {\n       let value = target.value;\n       if(target.name ===\"mobile_number\"){\n           value = formatNumber(value);\n       }\n       if(target.name === \"people\"){\n           if(value < 1)\n                value = 1;\n       }\n       setFormData({\n           ...formData,\n           [target.name]: value,\n       });\n   };\n\n   const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    postReservation(formData).then(response => {\n                    history.push(`/dashboard?date=${formData.reservation_date}`)\n                }).catch((error)=>{\n                    console.log(\"Error\",error);\n                    setReservationsError(error)});\n    \n  };\n    return (\n        <div>\n            <h1>New Reservation Form</h1>\n            <ErrorAlert error={reservationsError} />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"first_name\">\n                    Enter Your First Name:\n                    <input\n                        id=\"first_name\"\n                        type=\"text\"\n                        name=\"first_name\"\n                        onChange={handleChange}\n                        value={formData.first_name} />\n                </label>\n                <label htmlFor=\"last_name\">\n                    Enter Your Last Name:\n                    <input\n                        id=\"last_name\"\n                        type=\"text\"\n                        name=\"last_name\"\n                        onChange={handleChange}\n                        value={formData.last_name} />\n                </label>\n                <label htmlFor=\"mobile_number\">\n                    Enter Mobile Number:\n                    <input\n                        id=\"mobile_number\"\n                        type=\"tel\"\n                        name=\"mobile_number\"\n                        onChange={handleChange}\n                        value={formData.mobile_number} />\n                </label>\n                <label htmlFor=\"reservation_date\">\n                    Select Reservation Date:\n                    <input\n                        id=\"reservation_date\"\n                        type=\"date\"\n                        name=\"reservation_date\"\n                        onChange={handleChange}\n                        value={formData.reservation_date} />\n                </label>\n                <label htmlFor=\"reservation_time\">\n                    Select Reservation Time:\n                    <input\n                        id=\"reservation_time\"\n                        type=\"time\"\n                        name=\"reservation_time\"\n                        onChange={handleChange}\n                        value={formData.reservation_time} />\n                </label>\n                <label htmlFor=\"people\">\n                    Set number of guests:\n                    <input\n                        id=\"people\"\n                        type=\"number\"\n                        name=\"people\"\n                        onChange={handleChange}\n                        value={formData.people} />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <button type=\"cancel\" onClick={()=>history.goBack()}>Cancel</button>\n        </div>\n    )\n}","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/Reservation.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/reservationFormValidation.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/NewTable.js",["95","96"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router\"\nimport ErrorAlert  from \"../layout/ErrorAlert\";\nimport { postTable } from \"../utils/api\";\n\nexport default function NewTable () {\n    const initialFormState = {\n        table_name: \"unamed\",\n        capacity: \"1\",\n    }\n    const [formData, setFormData] = useState({ ...initialFormState });\n    const [tableError, setTableError] = useState(null);\n    const history = useHistory();\n\n    const handleChange = ({ target }) => {\n        let value = target.value;\n        if(target.name === \"capacity\"){\n            if(value < 1)\n                 value = 1;\n        }\n        setFormData({\n            ...formData,\n            [target.name]: value,\n        });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"submit called\");\n        postTable(formData).then(response => {\n                        history.push(`/tables`)\n                    }).catch((error)=>{\n                        console.log(\"Error\",error);\n                        setTableError(error)});\n      };\n\n    return (\n        <div>\n            <h1>New Table Form</h1>\n            <ErrorAlert error={tableError} />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"table_name\">\n                    Enter the Table's Name:\n                    <input\n                        id=\"table_name\"\n                        type=\"text\"\n                        name=\"table_name\"\n                        onChange={handleChange}\n                        value={formData.table_name} />\n                </label>\n                <label htmlFor=\"capacity\">\n                    Enter Table's Capacity:\n                    <input\n                        id=\"capacity\"\n                        type=\"number\"\n                        name=\"capacity\"\n                        onChange={handleChange}\n                        value={formData.capacity} />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <button type=\"cancel\" onClick={()=>history.goBack()}>Cancel</button>\n        </div>\n    )\n}\n","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/Table.js",["97","98","99","100"],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/seating/Seating.js",["101"],"import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router\"\nimport { readReservation } from \"../utils/api\"\nimport ErrorAlert from \"../layout/ErrorAlert\"\n\nexport default function Seating () {\n    const [reservation, setReservation] = useState({});\n    const [reservationError, setReservationError] = useState(null)\n    const params = useParams();\n\n    useEffect(loadReservation, []);\n\n    function loadReservation() {\n        const abortController = new AbortController();\n        setReservationError(null);\n        readReservation( {id:params.reservation_id} , abortController.signal)\n        .then(setReservation)\n        .catch(setReservationError);\n        return () => abortController.abort();\n    }\n    return (\n        <main>\n            <ErrorAlert error={reservationError} />\n            <h3>Seating for reservation: ${reservation.first_name}, party of ${reservation.people}</h3>\n        </main>\n    )\n}","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/tables/Tables.js",["102","103","104","105","106"],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-time.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/useQuery.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"111","severity":1,"message":"116","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"117","line":5,"column":24,"nodeType":"113","messageId":"114","endLine":5,"endColumn":43},{"ruleId":"111","severity":1,"message":"118","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":19},{"ruleId":"111","severity":1,"message":"119","line":16,"column":9,"nodeType":"113","messageId":"114","endLine":16,"endColumn":13},{"ruleId":"111","severity":1,"message":"120","line":18,"column":10,"nodeType":"113","messageId":"114","endLine":18,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"121","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":44},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"122","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"123","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":9,"column":15,"nodeType":"113","messageId":"114","endLine":9,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":11,"column":32,"nodeType":"127","endLine":11,"endColumn":34,"suggestions":"128"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"129","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"122","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"130","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":20},{"ruleId":"111","severity":1,"message":"131","line":3,"column":22,"nodeType":"113","messageId":"114","endLine":3,"endColumn":33},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'next' is defined but never used.","'validateReservation' is defined but never used.","'didMount' is assigned a value but never used.","'time' is assigned a value but never used.","'initialFormState' is assigned a value but never used.","'useRef' is defined but never used.","'useParams' is defined but never used.","'ErrorAlert' is defined but never used.","'setTable' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.reservation_id'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'useState' is defined but never used.","'listTables' is defined but never used.","'deleteTable' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [params.reservation_id]",{"range":"137","text":"138"},[410,412],"[params.reservation_id]"]