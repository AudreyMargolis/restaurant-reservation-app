[{"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/index.js":"1","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/App.js":"2","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Layout.js":"3","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Menu.js":"4","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Routes.js":"5","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/NotFound.js":"6","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/dashboard/Dashboard.js":"7","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/date-time.js":"8","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/api.js":"9","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/ErrorAlert.js":"10","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-date.js":"11","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/NewReservation.js":"12","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/Reservation.js":"13","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/reservationFormValidation.js":"14"},{"size":286,"mtime":1626705947136,"results":"15","hashOfConfig":"16"},{"size":333,"mtime":1626705947136,"results":"17","hashOfConfig":"16"},{"size":550,"mtime":1626705947136,"results":"18","hashOfConfig":"16"},{"size":1817,"mtime":1626705947136,"results":"19","hashOfConfig":"16"},{"size":1035,"mtime":1626802768495,"results":"20","hashOfConfig":"16"},{"size":327,"mtime":1626705947136,"results":"21","hashOfConfig":"16"},{"size":1781,"mtime":1626821477713,"results":"22","hashOfConfig":"16"},{"size":2386,"mtime":1626705947136,"results":"23","hashOfConfig":"16"},{"size":2059,"mtime":1626827344471,"results":"24","hashOfConfig":"16"},{"size":486,"mtime":1626705947136,"results":"25","hashOfConfig":"16"},{"size":628,"mtime":1626705947136,"results":"26","hashOfConfig":"16"},{"size":4394,"mtime":1626830286943,"results":"27","hashOfConfig":"16"},{"size":309,"mtime":1626805846511,"results":"28","hashOfConfig":"16"},{"size":1419,"mtime":1626830173934,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"dvjm2u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/index.js",[],["61","62"],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/App.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Layout.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Menu.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/Routes.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/NotFound.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/dashboard/Dashboard.js",["63"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\"\nimport { listReservations } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport Reservation from \"../reservations/Reservation\"\nimport { today, previous, next } from \"../utils/date-time\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\nfunction Dashboard({ date = null }) {\n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n  const [reservation_date, setReservation_date] = useState(date);\n  const params = useParams()\n  useEffect (()=>{\n    if(params.date){\n      setReservation_date(params.date);\n    }\n  },[]) \n\n  useEffect(loadDashboard, [reservation_date]);\n\n  function loadDashboard() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listReservations( {reservation_date} , abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError);\n    return () => abortController.abort();\n  }\n\n\n  return (\n    <main>\n      <h1>Dashboard</h1>\n      <div className=\"d-md-flex mb-3\">\n        <h4 className=\"mb-0\">Reservations for {reservation_date} </h4>\n      </div>\n      <div>\n        <button onClick={()=>setReservation_date(previous(reservation_date))}>Previous Date</button>\n        <button onClick={()=>setReservation_date(today())}>Today</button>\n        <button onClick={()=>setReservation_date(next(reservation_date))}>Next Date</button>\n      </div>\n      <ErrorAlert error={reservationsError} />\n      <div>\n        {reservations.map((res)=> <Reservation res={res} />)}\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/date-time.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/api.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/layout/ErrorAlert.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/format-reservation-date.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/NewReservation.js",["64","65"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router\"\nimport axios from \"axios\";\nimport { next } from \"../utils/date-time\";\nimport { formatNumber, validateReservation } from \"../utils/reservationFormValidation\"\nimport ErrorAlert  from \"../layout/ErrorAlert\"\n\n\n\nexport default function NewReservation ({date}) {\n    const didMount = useRef(false);\n\n    const history = useHistory();\n    const today = new Date();\n    let time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n\n   const initialFormState = {\n       first_name: \"first name\",\n       last_name: \"last name\",\n       mobile_number: \"555-555-5555\",\n       reservation_date: date,\n       reservation_time: time,\n       people: 1\n   }\n   const [formData, setFormData] = useState({ ...initialFormState });\n   const [reservationsError, setReservationsError] = useState(null);\n\n   useEffect(()=> {\n        if(didMount.current){\n            if(reservationsError === null){\n                axios.post('http://localhost:5000/reservations/new', formData)\n                .then(response => {\n                    console.log(response.data);\n                });\n                history.push(`/dashboard/${formData.reservation_date}`)\n            }\n        }else{\n            didMount.current = true;\n        }\n   }, [reservationsError])\n\n   const handleChange = ({ target }) => {\n       let value = target.value;\n       if(target.name ===\"mobile_number\"){\n           value = formatNumber(value);\n       }\n       if(target.name === \"people\"){\n           if(value < 1)\n                value = 1;\n       }\n       setFormData({\n           ...formData,\n           [target.name]: value,\n       });\n   };\n\n   const handleSubmit = (event) => {\n    event.preventDefault();\n    setReservationsError(validateReservation(formData));\n  };\n    return (\n        <div>\n            <h1>New Reservation Form</h1>\n            <ErrorAlert error={reservationsError} />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"first_name\">\n                    Enter Your First Name:\n                    <input\n                        id=\"first_name\"\n                        type=\"text\"\n                        name=\"first_name\"\n                        onChange={handleChange}\n                        value={formData.first_name} />\n                </label>\n                <label htmlFor=\"last_name\">\n                    Enter Your Last Name:\n                    <input\n                        id=\"last_name\"\n                        type=\"text\"\n                        name=\"last_name\"\n                        onChange={handleChange}\n                        value={formData.last_name} />\n                </label>\n                <label htmlFor=\"mobile_number\">\n                    Enter Mobile Number:\n                    <input\n                        id=\"mobile_number\"\n                        type=\"tel\"\n                        name=\"mobile_number\"\n                        onChange={handleChange}\n                        value={formData.mobile_number} />\n                </label>\n                <label htmlFor=\"reservation_date\">\n                    Select Reservation Date:\n                    <input\n                        id=\"reservation_date\"\n                        type=\"date\"\n                        name=\"reservation_date\"\n                        onChange={handleChange}\n                        value={formData.reservation_date} />\n                </label>\n                <label htmlFor=\"reservation_time\">\n                    Select Reservation Time:\n                    <input\n                        id=\"reservation_time\"\n                        type=\"time\"\n                        name=\"reservation_time\"\n                        onChange={handleChange}\n                        value={formData.reservation_time} />\n                </label>\n                <label htmlFor=\"people\">\n                    Set number of guests:\n                    <input\n                        id=\"people\"\n                        type=\"number\"\n                        name=\"people\"\n                        onChange={handleChange}\n                        value={formData.people} />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <button type=\"cancel\" onClick={()=>history.goBack()}>Cancel</button>\n        </div>\n    )\n}","/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/reservations/Reservation.js",[],"/home/audrey/Documents/GitHub/restaurant-reservation-app/front-end/src/utils/reservationFormValidation.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":23,"column":5,"nodeType":"72","endLine":23,"endColumn":7,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"70","severity":1,"message":"78","line":40,"column":7,"nodeType":"72","endLine":40,"endColumn":26,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.date'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'next' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'formData' and 'history'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [params.date]",{"range":"88","text":"89"},"Update the dependencies array to be: [formData, history, reservationsError]",{"range":"90","text":"91"},[791,793],"[params.date]",[1335,1354],"[formData, history, reservationsError]"]